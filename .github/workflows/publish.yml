name: Publish to crates.io

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish crate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Update Cargo.lock if needed
      run: |
        cargo update --workspace --quiet
        if ! git diff --quiet Cargo.lock; then
          git add Cargo.lock
          git commit -m "chore: update Cargo.lock for release"
        fi
    
    - name: Build and test
      run: |
        cargo build --workspace --release
        cargo test --workspace --release
    
    - name: Publish ai-session crate
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: |
        cd crates/ai-session
        cargo publish --token ${CARGO_REGISTRY_TOKEN} --allow-dirty || echo "ai-session might already be published"
    
    - name: Wait for ai-session to be available
      run: sleep 30
    
    - name: Publish ccswarm crate
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: |
        cd crates/ccswarm
        cargo publish --token ${CARGO_REGISTRY_TOKEN} --allow-dirty