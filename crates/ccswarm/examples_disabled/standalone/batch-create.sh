#!/bin/bash
# Batch application creation script for ccswarm

set -e

echo "🚀 ccswarm Batch Application Creator"
echo "===================================="

# Check if ccswarm is available
if ! command -v ccswarm &> /dev/null; then
    echo "❌ ccswarm not found. Please install it first."
    exit 1
fi

# Create output directory
OUTPUT_DIR="./generated-applications"
mkdir -p "$OUTPUT_DIR"

# Array of applications to create
declare -a APPS=(
    "Create a TODO application with task categories and priorities"
    "Build a blog platform with markdown support and comments"
    "Create a real-time chat application with rooms"
    "Build an e-commerce product catalog with shopping cart"
    "Create a project management dashboard with kanban board"
    "Build a weather dashboard with city search"
    "Create a recipe sharing platform with ratings"
    "Build a personal finance tracker with budgets"
    "Create a note-taking app with tags and search"
    "Build a simple social media feed with posts and likes"
)

# Function to sanitize app names for directory names
sanitize_name() {
    echo "$1" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]' | cut -c1-30
}

# Start orchestrator if not running
if ! ccswarm status &> /dev/null; then
    echo "🎯 Starting ccswarm orchestrator..."
    CCSWARM_SIMULATION=true ccswarm start --daemon &
    sleep 3
fi

# Generate applications
echo "🏗️ Generating ${#APPS[@]} applications..."
echo ""

for i in "${!APPS[@]}"; do
    APP_DESC="${APPS[$i]}"
    APP_NUM=$((i + 1))
    APP_NAME=$(sanitize_name "$APP_DESC")
    APP_DIR="$OUTPUT_DIR/app-$APP_NUM-$APP_NAME"
    
    echo "[$APP_NUM/${#APPS[@]}] Creating: $APP_DESC"
    echo "   Output: $APP_DIR"
    
    # Create the application
    if ccswarm auto-create "$APP_DESC" --output "$APP_DIR" 2>/dev/null; then
        echo "   ✅ Success!"
        
        # Generate a summary file
        cat > "$APP_DIR/APP_INFO.md" << EOF
# Application Information

**Description**: $APP_DESC
**Generated**: $(date)
**Generator**: ccswarm standalone mode

## Quick Start

\`\`\`bash
cd $(basename "$APP_DIR")
npm install
npm start
\`\`\`

## Features

This application was automatically generated based on the description above.
Check the README.md for detailed information about the features and architecture.

EOF
    else
        echo "   ❌ Failed to create application"
    fi
    
    echo ""
    
    # Small delay between generations
    sleep 1
done

# Create an index of all generated applications
echo "📋 Creating application index..."
cat > "$OUTPUT_DIR/INDEX.md" << EOF
# Generated Applications Index

This directory contains applications generated by ccswarm in standalone mode.

## Applications

EOF

# Add each app to the index
for i in "${!APPS[@]}"; do
    APP_DESC="${APPS[$i]}"
    APP_NUM=$((i + 1))
    APP_NAME=$(sanitize_name "$APP_DESC")
    APP_DIR="app-$APP_NUM-$APP_NAME"
    
    if [ -d "$OUTPUT_DIR/$APP_DIR" ]; then
        echo "### $APP_NUM. $APP_DESC" >> "$OUTPUT_DIR/INDEX.md"
        echo "- **Directory**: \`$APP_DIR\`" >> "$OUTPUT_DIR/INDEX.md"
        echo "- **Status**: ✅ Generated" >> "$OUTPUT_DIR/INDEX.md"
        echo "" >> "$OUTPUT_DIR/INDEX.md"
    fi
done

# Add usage instructions
cat >> "$OUTPUT_DIR/INDEX.md" << EOF

## Running Applications

Each application can be run independently:

\`\`\`bash
cd <app-directory>
npm install
npm start
\`\`\`

## Running All Applications

To run all applications with Docker:

\`\`\`bash
# Create a docker-compose.yml that includes all apps
# Then run:
docker-compose up
\`\`\`

---
Generated on $(date) by ccswarm
EOF

# Create a simple launcher script
cat > "$OUTPUT_DIR/launch-all.sh" << 'EOF'
#!/bin/bash
# Launch all generated applications

echo "🚀 Launching all applications..."
echo ""

PORT=3000
for dir in app-*; do
    if [ -d "$dir" ] && [ -f "$dir/package.json" ]; then
        echo "Starting $dir on port $PORT..."
        (
            cd "$dir"
            npm install --silent
            PORT=$PORT npm start
        ) &
        PORT=$((PORT + 1))
        sleep 2
    fi
done

echo ""
echo "✅ All applications started!"
echo "Press Ctrl+C to stop all applications"
wait
EOF

chmod +x "$OUTPUT_DIR/launch-all.sh"

# Summary
echo "✅ Batch generation complete!"
echo ""
echo "📊 Summary:"
echo "   Total applications: ${#APPS[@]}"
echo "   Output directory: $OUTPUT_DIR"
echo ""
echo "📋 Next steps:"
echo "1. View all applications:"
echo "   ls -la $OUTPUT_DIR"
echo ""
echo "2. Read the index:"
echo "   cat $OUTPUT_DIR/INDEX.md"
echo ""
echo "3. Run a specific app:"
echo "   cd $OUTPUT_DIR/app-1-*"
echo "   npm install && npm start"
echo ""
echo "4. Launch all apps:"
echo "   cd $OUTPUT_DIR"
echo "   ./launch-all.sh"
echo ""
echo "🎉 Happy coding with ccswarm!"