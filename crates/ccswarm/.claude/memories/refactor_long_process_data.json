{
  "id": "refactor_long_process_data",
  "name": "Extract functions from long process_data",
  "content": "{\"id\":\"refactor_long_process_data\",\"title\":\"Extract functions from long process_data\",\"description\":\"Function process_data has 62 lines, which is too long. Consider extracting smaller functions.\",\"kind\":\"ExtractFunction\",\"targets\":[{\"symbol\":{\"name\":\"process_data\",\"path\":\"module::process_data\",\"kind\":\"Function\",\"file_path\":\"src/processor.rs\",\"line\":100,\"body\":\"fn process_data() {\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n}\",\"references\":[],\"metadata\":{}},\"issues\":[{\"issue_type\":\"LongFunction\",\"description\":\"Function has 62 lines (threshold: 50)\",\"severity\":\"Warning\",\"location\":{\"file\":\"src/processor.rs\",\"line_start\":100,\"line_end\":162,\"column_start\":null,\"column_end\":null}}],\"suggested_changes\":[{\"description\":\"Extract logical sections into separate functions\",\"before\":\"fn process_data() {\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n    // code\\n}\",\"after\":\"fn process_data_part1() {\\n    // Extracted logic\\n}\\n\\nfn process_data_part2() {\\n    // Extracted logic\\n}\\n\\nfn process_data() {\\n    process_data_part1();\\n    process_data_part2();\\n}\",\"automated\":true}]}],\"benefits\":[\"Improved readability\",\"Easier testing\",\"Better maintainability\"],\"risks\":[\"May introduce function call overhead\"],\"estimated_effort\":\"Small\",\"priority\":\"Medium\",\"automated\":true,\"implementation_steps\":[{\"order\":1,\"description\":\"Identify logical sections in the function\",\"automated\":true,\"agent_required\":null,\"tools_required\":[\"semantic_analyzer\"]},{\"order\":2,\"description\":\"Extract each section into a separate function\",\"automated\":true,\"agent_required\":\"refactoring-specialist\",\"tools_required\":[\"replace_symbol_body\"]},{\"order\":3,\"description\":\"Update function calls and references\",\"automated\":true,\"agent_required\":null,\"tools_required\":[\"find_referencing_symbols\"]}],\"created_at\":\"2025-08-04T04:30:59.000829Z\"}",
  "memory_type": "Refactoring",
  "related_symbols": [
    "module::process_data"
  ],
  "metadata": {
    "priority": "Medium",
    "automated": "true",
    "kind": "ExtractFunction"
  },
  "created_at": "2025-08-04T04:30:59.001261Z",
  "updated_at": "2025-08-04T04:30:59.001261Z",
  "access_count": 0
}