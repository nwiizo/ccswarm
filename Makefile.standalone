# Makefile for ccswarm standalone deployment

.PHONY: help install build docker docker-up docker-down demo clean

# Default target
help:
	@echo "ccswarm Standalone Deployment Makefile"
	@echo "====================================="
	@echo ""
	@echo "Available targets:"
	@echo "  make install      - Install ccswarm from source"
	@echo "  make build        - Build ccswarm binary"
	@echo "  make docker       - Build Docker image"
	@echo "  make docker-up    - Start ccswarm with Docker Compose"
	@echo "  make docker-down  - Stop ccswarm containers"
	@echo "  make demo         - Run standalone demo"
	@echo "  make clean        - Clean build artifacts"
	@echo ""
	@echo "Quick start:"
	@echo "  make install && make demo"

# Build from source
build:
	@echo "Building ccswarm..."
	cargo build --release

# Install to system
install: build
	@echo "Installing ccswarm..."
	cargo install --path .
	@echo "ccswarm installed successfully!"

# Build Docker image
docker:
	@echo "Building Docker image..."
	docker build -f docker/Dockerfile.standalone -t ccswarm:standalone .

# Start with Docker Compose
docker-up: docker
	@echo "Starting ccswarm with Docker Compose..."
	cd docker && docker-compose -f docker-compose.standalone.yml up -d
	@echo "ccswarm is running! Access TUI with:"
	@echo "  docker-compose -f docker/docker-compose.standalone.yml run ccswarm-tui"

# Stop Docker containers
docker-down:
	@echo "Stopping ccswarm containers..."
	cd docker && docker-compose -f docker-compose.standalone.yml down

# Run standalone demo
demo:
	@echo "Running ccswarm standalone demo..."
	@if command -v ccswarm >/dev/null 2>&1; then \
		./examples/standalone/quick-start.sh; \
	else \
		echo "ccswarm not found. Please run 'make install' first."; \
		exit 1; \
	fi

# Create a batch of demo applications
demo-batch:
	@echo "Creating batch of demo applications..."
	@if command -v ccswarm >/dev/null 2>&1; then \
		./examples/standalone/batch-create.sh; \
	else \
		echo "ccswarm not found. Please run 'make install' first."; \
		exit 1; \
	fi

# Clean build artifacts
clean:
	@echo "Cleaning build artifacts..."
	cargo clean
	rm -rf ccswarm-standalone-demo/
	rm -rf generated-applications/
	rm -rf docker/workspace/
	@echo "Clean complete!"

# Test standalone mode
test-standalone:
	@echo "Testing standalone mode..."
	CCSWARM_SIMULATION=true cargo test --features simulation
	@echo "Tests passed!"

# Generate example configuration
gen-config:
	@echo "Generating example configuration..."
	@mkdir -p workspace
	@cp examples/configs/standalone.json workspace/ccswarm.json
	@echo "Configuration created at workspace/ccswarm.json"

# Quick standalone setup
quick-setup: install gen-config
	@echo "Quick setup complete!"
	@echo ""
	@echo "To start ccswarm in standalone mode:"
	@echo "  cd workspace"
	@echo "  CCSWARM_SIMULATION=true ccswarm start"
	@echo ""
	@echo "To monitor agents:"
	@echo "  ccswarm tui"
	@echo ""
	@echo "To create an app:"
	@echo "  ccswarm auto-create 'Create TODO app' --output ./my-app"