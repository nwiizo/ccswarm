version: '3.8'

services:
  # Master orchestrator service
  ccswarm-master:
    build:
      context: ..
      dockerfile: docker/Dockerfile.standalone
    container_name: ccswarm-master
    volumes:
      - ./workspace:/workspace
      - ./logs:/workspace/logs
      - ./generated-apps:/workspace/generated-apps
    environment:
      - CCSWARM_SIMULATION=true
      - RUST_LOG=info
      - CCSWARM_AUTO_ACCEPT=true
    command: ["ccswarm", "start", "--daemon", "--port", "8080"]
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ccswarm", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # TUI service for interactive monitoring
  ccswarm-tui:
    build:
      context: ..
      dockerfile: docker/Dockerfile.standalone
    container_name: ccswarm-tui
    volumes:
      - ./workspace:/workspace:ro
    environment:
      - TERM=xterm-256color
      - CCSWARM_SIMULATION=true
    tty: true
    stdin_open: true
    command: ["ccswarm", "tui"]
    depends_on:
      - ccswarm-master
    profiles:
      - interactive

  # Auto-create service for generating applications
  ccswarm-autocreate:
    build:
      context: ..
      dockerfile: docker/Dockerfile.standalone
    container_name: ccswarm-autocreate
    volumes:
      - ./workspace:/workspace
      - ./generated-apps:/workspace/generated-apps
    environment:
      - CCSWARM_SIMULATION=true
    command: ["sleep", "infinity"]
    depends_on:
      - ccswarm-master
    profiles:
      - tools

  # Web server for generated applications
  app-server:
    image: node:18-alpine
    container_name: ccswarm-app-server
    volumes:
      - ./generated-apps:/apps
    working_dir: /apps
    command: ["sh", "-c", "cd /apps/*/  && npm install && npm start"]
    ports:
      - "3000:3000"
      - "3001:3001"
    profiles:
      - apps
    depends_on:
      - ccswarm-master

  # Documentation server
  docs-server:
    image: nginx:alpine
    container_name: ccswarm-docs
    volumes:
      - ./workspace:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8081:80"
    profiles:
      - docs

volumes:
  workspace:
  logs:
  generated-apps:

networks:
  default:
    name: ccswarm-network